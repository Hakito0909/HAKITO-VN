import os
import sys
import time
import requests
import socket
from time import sleep
from rich.console import Console
from rich.table import Table
from pystyle import Colors, Colorate
import cloudscraper

# Ki·ªÉm tra m·∫°ng
def kiem_tra_mang():
    try:
        socket.create_connection(("8.8.8.8", 53), timeout=3)
    except OSError:
        print("M·∫°ng kh√¥ng ·ªïn ƒë·ªãnh ho·∫∑c b·ªã m·∫•t k·∫øt n·ªëi. Vui l√≤ng ki·ªÉm tra l·∫°i m·∫°ng.")

kiem_tra_mang()

# Banner
def banner():
    os.system('cls' if os.name == 'nt' else 'clear')
    print(Colorate.Horizontal(Colors.blue_to_green, """
‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó 
‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë
‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù 

ADMIN : HAKITO                           
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê  
            Telegram : NONE
            Tiktok   : NONE
            Youtube  : NONE
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê                                                
"""))

# Nh·∫≠p Auth
try:
    Authorization = open("Authorization.txt", "x")
    t = open("token.txt", "x")
except:
    pass
Authorization = open("Authorization.txt", "r")
t = open("token.txt", "r")
author = Authorization.read()
token = t.read()
if author == "":
    author = input(Colorate.Diagonal(Colors.blue_to_white, " üí∏ NH·∫¨P AUTHORIZATION GOLIKE : "))
    token = input(Colorate.Diagonal(Colors.red_to_white, "üí∏  NH·∫¨P TOKEN (T C·ª¶A GOLIKE): "))
    Authorization = open("Authorization.txt", "w")
    t = open("token.txt", "w")
    Authorization.write(author)
    t.write(token)
Authorization.close()
t.close()

headers = {
    'Accept': 'application/json, text/plain, */*',
    'Content-Type': 'application/json;charset=utf-8',
    'Authorization': author,
    't': token,
    'User-Agent': 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Mobile Safari/537.36',
    'Referer': 'https://app.golike.net/account/manager/snapchat',
}

scraper = cloudscraper.create_scraper()

# API
def chonacc():
    try:
        response = scraper.get('https://gateway.golike.net/api/snapchat-account', headers=headers).json()
        return response
    except Exception:
        sys.exit()

def nhannv(account_id):
    try:
        params = {
            'account_id': account_id,
            'data': 'null',
        }
        response = scraper.get('https://gateway.golike.net/api/advertising/publishers/snapchat/jobs', headers=headers, params=params).json()
        return response
    except Exception:
        sys.exit()

def hoanthanh(ads_id, account_id):
    try:
        json_data = {
            'ads_id': ads_id,
            'account_id': account_id,
            'async': True,
            'data': None,
        }
        response = scraper.post('https://gateway.golike.net/api/advertising/publishers/snapchat/complete-jobs', headers=headers, json=json_data, timeout=6)
        return response.json()
    except Exception:
        return None

def baoloi(ads_id, object_id, account_id, loai):
    try:
        json_data2 = {
            'ads_id': ads_id,
            'object_id': object_id,
            'account_id': account_id,
            'type': loai,
        }
        scraper.post('https://gateway.golike.net/api/advertising/publishers/snapchat/skip-jobs', headers=headers, json=json_data2)
    except Exception:
        pass

# H√†m ch·ªçn acc
def chon_tai_khoan():
    global account_id
    chontk = chonacc()
    if chontk.get("status") != 200:
        print("\033[1;31mAuthorization ho·∫∑c T sai üòÇ")
        quit()
    for i in range(len(chontk["data"])):
        print(f"[{i+1}] {chontk['data'][i]['name']} | Online")
    while True:
        try:
            luachon = int(input("Ch·ªçn t√†i kho·∫£n Snapchat b·∫°n mu·ªën ch·∫°y ü§ë: "))
            while luachon > len((chontk)["data"]):
                luachon = int(input("Acc n√†y kh√¥ng c√≥, nh·∫≠p l·∫°i: "))
            account_id = chontk["data"][luachon - 1]["id"]
            break
        except:
            print("Sai ƒë·ªãnh d·∫°ng")

# Ch·ªçn acc ban ƒë·∫ßu
chon_tai_khoan()

# Delay
while True:
    try:
        delay = int(input("Delay th·ª±c hi·ªán job ‚è∞: "))
        break
    except:
        print("Sai ƒë·ªãnh d·∫°ng")

# Gi·ªõi h·∫°n l·ªói
while True:
    try:
        gioihan_loi = int(input("Sau bao nhi√™u job l·ªói th√¨ quay l·∫°i ch·ªçn acc m·ªõi ‚è∞: "))
        break
    except:
        print("Sai ƒë·ªãnh d·∫°ng")

# Ch·∫°y job
while True:
    banner()
    dem = 0
    tong = 0
    jobloi = 0
    while True:
        print('ƒêANG GET JOB ‚úÖ', end="\r")
        nhanjob = nhannv(account_id)
        if not nhanjob or nhanjob.get("status") != 200:
            continue

        ads_id = nhanjob["data"]["id"]
        link = nhanjob["data"]["link"]
        object_id = nhanjob["data"]["object_id"]
        job_type = nhanjob["data"]["type"]

        if job_type != "follow":
            baoloi(ads_id, object_id, account_id, job_type)
            continue

        # M·ªü link Snapchat ƒë·ªÉ b·∫°n t·ª± follow
        os.system(f'termux-open-url {link}')

        # Delay
        for remaining_time in range(delay, -1, -1):
            print(f"\rƒêang ch·ªù b·∫°n follow... [{remaining_time}s]", end="")
            time.sleep(1)
        print("\r                          \r", end="")

        # Th·ª≠ ho√†n th√†nh job
        nhantien = hoanthanh(ads_id, account_id)
        if nhantien and nhantien.get("status") == 200:
            dem += 1
            tien = nhantien["data"]["prices"]
            tong += tien
            jobloi = 0
            console = Console()
            table = Table(show_header=True, header_style="bold magenta")
            table.add_column("STT", style="bold yellow")
            table.add_column("Status", style="green")
            table.add_column("Ti·ªÅn", style="bold green")
            table.add_column("T·ªïng Ti·ªÅn", style="bold white")
            table.add_row(str(dem), "SUCCESS", f"+{tien}ƒë", f"{tong} vnƒë")
            os.system('cls' if os.name == 'nt' else 'clear')
            banner()
            console.print(table)
            time.sleep(0.7)
        else:
            # N·∫øu kh√¥ng follow ho·∫∑c l·ªói ‚Üí skip job
            baoloi(ads_id, object_id, account_id, job_type)
            jobloi += 1
            print("Job l·ªói, b·ªè qua v√† l·∫•y job m·ªõi...", end="\r")
            sleep(1.5)

            # N·∫øu l·ªói li√™n t·ª•c v∆∞·ª£t gi·ªõi h·∫°n ‚Üí quay l·∫°i ch·ªçn acc m·ªõi
            if jobloi >= gioihan_loi:
                print("\nƒê√£ v∆∞·ª£t qu√° s·ªë job l·ªói cho ph√©p ‚Üí quay l·∫°i ch·ªçn acc m·ªõi!")
                chon_tai_khoan()
                break